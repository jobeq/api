{
    "swagger": "2.0",
    "info": {
        "title": "jobEQ API",
        "description": "jobEQ API documentation based on Swagger specification. To start using jobEQ API application should be registered by jobEQ and receive secret key, please email us to register your application. Application should perform authentication based on oAuth2 protocol. You can find detailed description of authentication procedure in <a href=\"https://github.com/jobeq/api/blob/master/authorization.md\">this document</a>.",
        "termsOfService": "public",
        "contact": {
            "name": "jobEQ",
            "url": "http://jobeq.info/api/",
            "email": "helpdesk@jobeq.net"
        },
        "version": "2.0.0"
    },
    "host": "jobeq.info",
    "schemes": [
        "http"
    ],
    "basePath": "/api_test",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "iwam",
            "description": "set of functions related to iWAM questionnaire"
        },
        {
            "name": "people",
            "description": "set of functions related to personal data"
        },
        {
            "name": "reports",
            "description": "retrieve reports for people"
        },
        {
            "name": "texts",
            "description": "get translated texts"
        },
        {
            "name": "model",
            "description": "functions related to modeling"
        }
    ],
    "paths": {
        "/people/{cugID}": {
            "post": {
                "summary": "register new person in the CUG",
                "description": "register new person in jobEQ database, client must provide a CUG where to put the person record, profile will be added to default CUG inbox storageroom",
                "operationId": "person_register",
                "parameters": [
                    {
                        "name": "cugID",
                        "in": "path",
                        "description": "ID of CUG to regester person at. Current API client should have enough access permissions to register people in requested CUG",
                        "required": true,
                        "type": "string",
                        "maxLength": 6,
                        "minLength": 6
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "description": "personal info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                ],
                "tags": [
                    "people"
                ],
                "responses": {
                    "201": {
                        "description": "new person record was created and added to the CUG",
                        "headers": {
                            "Location": {
                                "description": "URI to retrieve person record with API",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Person registration in provided CUG is not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Unknown cugID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/people/{personID}/pin": {
            "get": {
                "summary": "get person PIN code hash",
                "description": "retrieve person pin code sha1 hash, this might be useful when doing person authentication. Note that HR user needs specific permissions to retrieve PIN",
                "operationId": "get_person_pin",
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    }
                ],
                "tags": [
                    "people"
                ],
                "responses": {
                    "200": {
                        "description": "Hash code of person PIN",
                        "schema": {
                            "$ref": "#/definitions/PersonPIN"
                        }
                    },

                    "401": {
                        "description": "Unauthorized: access token is incorrect, API user is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "403": {
                        "description": "Forbidden: API user doesn't have access to personal data or not enough permissions to process request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "Not Found: personID is invalid or person doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/people/{personID}/surveys/iwam/scores": {
            "put": {
                "summary": "submit iWAM data for person",
                "description": "submit iWAM answers for person",
                "operationId": "post_person_iwam",
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    },
                    {
                        "name": "answers",
                        "in": "body",
                        "description": "iWAM answers",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "minItems": 40,
                            "maxItems": 40,
                            "items": {
                                "$ref": "#/definitions/IwamAnswer"
                            }
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "language used for iWAM (ISO 639-1 code)",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "required": true
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "when iWAM was started, full date with seconds when person started iWAM quiestionnaire",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "when iWAM was started, full date with seconds when person finished iWAM quiestionnaire",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    }
                ],
                "tags": [
                    "people",
                    "iwam"
                ],
                "responses": {
                    "204": {
                        "description": "iWAM data for person was added"
                    },
                    "403": {
                        "description": "API user doesn't have access to requested person, or not enough permisions to process request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "person ID doesn't exist, or iWAM is not allowed for person",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "get iWAM scores for person",
                "description": "retrieve iWAM scores for person. If person didn't complete iWAM, error will be returned. If person completed iWAM more then once, the latest test data would be returned. Note: one jobEQ credit will be charged in case if current API all is the first attempt to use personal iWAM data.",
                "operationId": "get_person_iwam_scores",
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    },
                    {
                        "$ref": "#/parameters/stdgrpParam"
                    }
                ],
                "tags": [
                    "people",
                    "iwam"
                ],
                "responses": {
                    "200": {
                        "description": "iWAM scores data",
                        "schema": {
                            "$ref": "#/definitions/iWAMScores"
                        }
                    },
                    "403": {
                        "description": "API user doesn't have access to requested person, or not enough permisions to process request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "incorrect person ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "iWAM is not available for provided person",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },

        "/people/{personID}/surveys/iwam/status": {
            "get": {
                "summary": "get person iWAM status",
                "description": "retrieve current person iWAM status",
                "operationId": "get_person_iwam_status",
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    }
                ],
                "tags": [
                    "people",
                    "iwam"
                ],
                "responses": {
                    "200": {
                        "description": "current iWAM status of the person",
                        "schema": {
                            "$ref": "#/definitions/PersonIwamStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: access token is incorrect, API user is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "403": {
                        "description": "Forbidden: API user doesn't have access to personal data or not enough permissions to process request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },

        "/people/{personID}/storage": {
            "get": {
                "summary": "get person storage info",
                "description": "retrieve information about CUGs and storagerooms where person is registered. This will return only those CUGs and storagerooms which are accessible to current HR user.",
                "operationId": "get_person_storage",
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    }
                ],
                "tags": [
                    "people"
                ],
                "responses": {
                    "200": {
                        "description": "returns data about CUGs and storagerooms where person ID is stored. The result is array of StorageInfo objects. If one of the array members is an object with empty storagerooms array, it means that person is registered in the CUG, but removed from all storagerooms.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StorageInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: access token is incorrect, API user is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "403": {
                        "description": "Forbidden: API user doesn't have access to personal data or not enough permissions to process request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "Not Found: personID is invalid or person doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "500": {
                        "description": "server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/texts/surveys/iwam/{language}": {
            "get": {
                "summary": "get texts for iWAM survey",
                "description": "retrieve texts (questions and endings) for iWAM survey for provided language. See available translations in language parameter specification.",
                "operationId": "get_texts_surveys_iwam_translations",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "language of translation ((ISO 639-1), available translations are defined in acceptable values",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "required": true

                    }
                ],
                "tags": [
                    "texts"
                ],
                "responses": {
                    "200": {
                        "description": "iWAM translation record",
                        "schema": {
                            "type": "array",
                            "minItems": 40,
                            "maxItems": 40,
                            "items": {
                                "$ref": "#/definitions/IwamQuestionTranslation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid language parameter",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found: no translation exists for requested language",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/people/{personID}/surveys/iwam/model/{modelID}/scores": {
            "get": {
                "summary": "get person score for iWAM model",
                "description": "retrieve personal score for iWAM model. To perform this operation current HR user should have access to modeling tools and to specific provided model. Note: one jobEQ credit will be charged in case if current API all is the first attempt to use personal iWAM data.",
                "operationId": "get_person_iwam_model_scores",
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    },
                    {
                        "$ref": "#/parameters/modelIDParam"
                    }
                ],
                "tags": [
                    "people",
                    "iwam",
                    "model"
                ],
                "responses": {
                    "200": {
                        "description": "scores for iWAM model",
                        "schema": {
                            "$ref": "#/definitions/iWAMModelScore"
                        }
                    },
                    "400": {
                        "description": "Person didn't complete iWAM",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: access token is incorrect, API user is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "403": {
                        "description": "Forbidden: API user doesn't have access to personal data, or not enough permissions to process request, or API user does not have access to model, or API user doesn't have access to requested standard group",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "Not Found: personID is invalid or person doesn't exist, or modelID is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/reports/surveys/iwam/{personID}/management": {
            "get": {
                "summary": "get iWAM management report for person",
                "description": "retrieve iWAM management report for person in PDF file format. HR user should have permission to use management report. The response is binary PDF file named iwam_management_report.pdf",
                "operationId": "get_reports_surveys_iwam_management",
                "tags": [
                    "reports"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    },
                    {
                        "name": "reportSettings",
                        "in": "body",
                        "description": "report settings",
                        "schema": {
                            "$ref": "#/definitions/ReportSettings"
                        }
                    },
                    {
                        "name": "pageFormat",
                        "in": "query",
                        "description": "PDF page format",
                        "type": "string",
                        "enum": [
                            "letter",
                            "a4"
                        ],
                        "default": "letter"
                    },
                    {
                        "name": "sections",
                        "in": "query",
                        "description": "which sections to include in the report (0 means all sections)",
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            14,
                            124,
                            134,
                            0
                        ],
                        "default": 0
                    },
                    {
                        "name": "s4Type",
                        "in": "query",
                        "description": "type of section 4",
                        "type": "string",
                        "enum": [
                            "graph",
                            "bars"
                        ],
                        "default": "bars"
                    },
                    {
                        "name": "s4BarsType",
                        "in": "query",
                        "description": "type of Bars in section 4 (only used if s4Type is \"bars\" )",
                        "type": "string",
                        "enum": [
                            "bars",
                            "lines",
                            "solid"
                        ],
                        "default": "solid"
                    }
                ],
                "produces": [
                    "application/pdf"
                ],
                "responses": {
                    "200": {
                        "description": "PDF file containing iWAM Management report",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "Content-type": {
                                "type": "string",
                                "description": "application/pdf; charset=utf-8"
                            },
                            "Content-Disposition": {
                                "type": "string",
                                "description": "attachment; filename=iwam_management_report.pdf"
                            }
                        }
                    },
                    "403": {
                        "description": "HR user has no access to personal data, or HR user doesn't have permission to use management report.  See errr message for details",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "incorrect person ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/reports/surveys/iwam/{personID}/attitude_sorter": {
            "get": {
                "summary": "get personal iWAM attitude sorter report for person",
                "description": "get iWAM attitude sorter report for person in JSON file format.",
                "operationId": "get_reports_surveys_iwam_attitudesorter",
                "tags": [
                    "reports"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    },
                    {
                        "$ref": "#/parameters/cugIDParam"
                    },
                    {
                        "$ref": "#/parameters/stdgrpParam"
                    },
                    {
                        "$ref": "#/parameters/languageParam"
                    }

                ],
                "responses": {
                    "200": {
                        "description": "representation of report content",
                        "schema": {
                            "$ref": "#/definitions/iWAMAttitudeSorterReport"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: access token is incorrect, API user is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "403": {
                        "description": "Forbidden: API user doesn't have access to personal data or not enough permissions to process request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "Not Found: personID is invalid or person doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/reports/surveys/iwam/{personID}/ranking/{modelID}": {
            "get": {
                "summary": "get iWAM ranking report for person",
                "description": "get iWAM ranking report for person in HTML file format. The response is HTML file named iwam_ranking_report.html with CUG header and footer and report content",
                "operationId": "get_reports_surveys_iwam_ranking",
                "tags": [
                    "reports",
                    "iwam",
                    "model"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/personIDParam"
                    },
                    {
                        "$ref": "#/parameters/modelIDParam"
                    },
                    {
                        "name": "reportSettings",
                        "in": "body",
                        "description": "report settings",
                        "schema": {
                            "$ref": "#/definitions/ReportSettings"
                        }
                    }
                ],
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "HTML file containing iWAM ranking report",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "Content-type": {
                                "type": "string",
                                "description": "text/html; charset=utf-8"
                            },
                            "Content-Disposition": {
                                "type": "string",
                                "description": "attachment; filename=iwam_ranking_report.html"
                            }
                        }
                    },
                    "403": {
                        "description": "HR user has no access to personal data",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "incorrect person ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "personIDParam": {
            "name": "personID",
            "in": "path",
            "description": "jobEQ_ID for person",
            "required": true,
            "type": "integer",
            "format": "int32"
        },
        "cugIDParam": {
            "name": "cugID",
            "in": "query",
            "description": "ID of the CUG",
            "type": "string"
        },
        "modelIDParam": {
            "name": "modelID",
            "in": "path",
            "description": "id of iWAM model",
            "required": true,
            "type": "integer",
            "format": "int32"
        },
        "stdgrpParam": {
            "name": "stdgrpID",
            "in": "query",
            "description": "standard group ID",
            "type": "string"
        },
        "languageParam": {
            "name": "language",
            "in": "query",
            "description": "ISO language code",
            "type": "string"
        }
    },
    "definitions": {
        "PersonPIN": {
            "title": "pin",
            "description": "sha1 hash of person pin code",
            "properties": {
                "pinHash": {
                    "type": "string"
                }
            }
        },

        "PersonIwamStatus": {
            "title": "person iWAM status",
            "required": [
                "iwamStatus"
            ],
            "properties": {
                "iwamStatus": {
                    "type": "string",
                    "description": "current personal iWAM status, possible values are: 'n' - iWAM is not available for person, 't' - iWAM was completed by person and no new iWAM data can be submitted, '<integer>' - iWAM was completed at least once and new iWAM can be submitted (the value of integer shows how many iWAMs are stored for person already) ",
                    "enum": [
                        "n",
                        "t",
                        0
                    ]
                }
            }
        },

        "Person": {
            "type": "object",
            "title": "person",
            "description": "representation of personal data",
            "required": [
                "firstName",
                "lastName",
                "gender",
                "workCountry",
                "isSamecountry"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "description": "first name"
                },
                "lastName": {
                    "type": "string",
                    "description": "last name"
                },
                "gender": {
                    "type": "string",
                    "description": "gender",
                    "enum": [
                        "f",
                        "m"
                    ]
                },
                "workCountry": {
                    "type": "string",
                    "description": "work country ISO code",
                    "minLength": 2,
                    "maxLength": 2
                },
                "middleName": {
                    "type": "string",
                    "description": "middle name"
                },
                "postalCode": {
                    "type": "string"
                },
                "email": {
                    "description": "email address",
                    "type": "string",
                    "format": "email"
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "date of birth",
                    "format": "date"
                },
                "yearsOfSchool": {
                    "description": "number of years the person has gone to school, starting from the age of 6 (after kindergaarden)",
                    "type": "integer"
                },
                "occupation": {
                    "description": "occupation code",
                    "type": "string",
                    "enum": [
                        "A",
                        "W",
                        "I",
                        "C",
                        "V",
                        "T",
                        "E",
                        "O",
                        "G",
                        "X",
                        "H",
                        "Y",
                        "M",
                        "P",
                        "R",
                        "F",
                        "S",
                        "L",
                        "D",
                        "B",
                        "U",
                        9
                    ]
                },
                "isSamecountry": {
                    "description": "whether person always worked in “work country”",
                    "type": "boolean"
                },
                "countryOfOrigin": {
                    "description": "ISO  code for the country if the person hasn’t always lived in the work country, the country the person identifies with (e.g. because the person was born there)",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                },
                "jobTitle": {
                    "description": "the title of person job",
                    "type": "string"
                },
                "tel": {
                    "description": "telephone number",
                    "type": "string"
                },
                "fax": {
                    "description": "fax number",
                    "type": "string"
                },
                "mobile": {
                    "description": "mobile number",
                    "type": "string"
                },
                "extraInfo": {
                    "description": "array of extra data for person, some CUGs might require some extra data to register person in the system",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtraPersonInfoModel"
                    }
                }
            }
        },

        "ExtraPersonInfoModel": {
            "title": "extra personal info item",
            "description": "represents extra data for person",
            "required": [
                "id",
                "value"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },

        "iWAMPatternsScore": {
            "title": "score for single iWAM pattern",
            "description": "representation of the score for one pattern",
            "properties": {
                "pattern": {
                    "type": "string",
                    "enum": [
                        "OF1P",
                        "OF1M",
                        "OF2P",
                        "OF2M",
                        "OF3P",
                        "OF3M",
                        "OF4P",
                        "OF4M",
                        "OF5P",
                        "OF5M",
                        "OF6P",
                        "OF6M",
                        "OF7P",
                        "OF7M",
                        "OF8P",
                        "OF8M",
                        "So1",
                        "So2",
                        "So3",
                        "WA1",
                        "WA2",
                        "WA3",
                        "TP1",
                        "TP2",
                        "TP3",
                        "Mo1",
                        "Mo2",
                        "Mo3",
                        "N1",
                        "N2",
                        "N3",
                        "N4",
                        "CO1",
                        "CO2",
                        "CO3",
                        "CO4",
                        "CO5",
                        "CO6",
                        "CO7",
                        "CO8",
                        "IF1",
                        "IF2",
                        "IF3",
                        "IF4",
                        "IF5",
                        "IF6",
                        "IF7",
                        "IF8"
                    ]
                },
                "score": {
                    "type": "integer"
                }
            }
        },

        "iWAMScores": {
            "title": "scores for iWAM",
            "description": "representatin person scores for iWAM",
            "required": [
                "scores"
            ],
            "properties": {
                "standardGroup": {
                    "$ref": "#/definitions/standardGroup"
                },
                "scores": {
                    "description": "Array of iWAM scores",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iWAMPatternsScore"
                    }
                }
            }
        },
        "iWAMModelScore": {
            "title": "scores for iWAM model",
            "description": "representatin person score for iWAM model",
            "required": [
                "model",
                "score"
            ],
            "properties": {
                "model": {
                    "description": "iWAM model information",
                    "type": "object",
                    "properties": {
                        "id": {
                            "description" : "Model ID",
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "description": "Model name",
                            "type": "string"
                        }
                    }
                },
                "scores": {
                    "description": "scores data for iWAM model",
                    "type": "object",
                    "properties": {
                        "total": {
                            "description" : "total personal score for model",
                            "type": "integer",
                            "format": "int32"
                        },
                        "red": {
                            "description": "how many times person appeared in the red zone",
                            "type": "integer",
                            "format": "int32"
                        },
                        "green": {
                            "description": "how many times person appeared in the green zone",
                            "type": "integer",
                            "format": "int32"
                        },
                        "orange": {
                            "description": "how many times person appeared in the orange zone",
                            "type": "integer",
                            "format": "int32"
                        },
                        "grey": {
                            "description": "how many times person appeared in the grey zone",
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "maxModelScore": {
                    "description": "maximum possible score for model",
                    "type": "integer",
                    "format": "int32"
                }

            }
        },
        "iWAMAttitudeSorterReportPatternData": {
            "title": "iWAM Attitude sorter report pattern data",
            "description": "representation one pattern information used in iWAM attitude sorter report",
            "required": [
                "label",
                "description"
            ],
            "properties": {
                "label": {
                    "description": "current pattern label",
                    "type": "string"
                },
                "description": {
                    "description": "description for current pattern",
                    "type": "string"
                },
                "jobAdvice": {
                    "description": "job advice related to current pattern",
                    "type": "string"
                }
            }
        },

        "standardGroup": {
            "title": "standrd group information",
            "description": "representation standard group data",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id of standard group",
                    "type": "string"
                },
                "name": {
                    "description": "name of standard group",
                    "type": "string"
                },
                "country": {
                    "description": "country of standard group",
                    "type": "string"
                }
            }
        },

        "iWAMAttitudeSorterReport": {
            "title": "iWAM attitude sorter report",
            "description": "representation of iWAM Attitude sorter report",
            "required": [
                "settings",
                "person",
                "standardGroup",
                "content"
            ],
            "properties": {
                "settings": {
                    "description": "current report settings",
                    "type": "object",
                    "properties": {
                        "standardGroupID": {
                            "description" : "id of standard group",
                            "type": "string"
                        },
                        "cugID": {
                            "description" : "id of the CUG",
                            "type": "string"
                        },
                        "language": {
                            "description": "current report language",
                            "type": "string"
                        }
                    }
                },
                "person": {
                    "description": "personal info",
                    "type": "object",
                    "properties": {
                        "name": {
                            "description" : "Full name of person",
                            "type": "string"
                        },
                        "testDate": {
                            "description": "Date when iWAM test was completed",
                            "type": "string",
                            "format": "dateTime"
                        },
                        "validity": {
                            "description": "Number of questions where endings order was not changed",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "maximum": 40
                        }
                    }
                },
                "standardGroup": {
                    "$ref": "#/definitions/standardGroup"
                },
                "content": {
                    "description": "report content",
                    "type": "object",
                    "properties": {
                        "strengths": {
                            "description": "Array of strings representing strengths for person",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/iWAMAttitudeSorterReportPatternData"
                            }
                        },
                        "development": {
                            "description": "Array of strings representing areas of development for person",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/iWAMAttitudeSorterReportPatternData"
                            }
                        }
                    }
                },
                "extra_texts": {
                    "description": "additional report texts",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of the string",
                                "type": "string"
                            },
                            "text": {
                                "description": "extra string content",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },

        "IwamQuestionTranslation": {
            "title": "single iWAM question translation",
            "description": "strings of iWAM question and endings for specified language",
            "required": [
                "language",
                "question",
                "endings"
            ],
            "properties": {
                "language": {
                    "type": "string",
                    "description": "current language"
                },
                "question": {
                    "description": "question language text",
                    "type": "string"
                },
                "endings": {
                    "description": "array of endings for the question. Order is the same as it appears in iWAM survey on jobEQ web site",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },

        "IwamAnswer": {
            "title": "iWAM answer",
            "description": "the string of 5 digins representing answer on iWAM question (example 43125)",
            "properties": {
                "number": {
                    "description": "number of question",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 40
                },
                "order": {
                    "description": "integer with 5 digits representing iWAM endings order, each digit corresponds to initial ending position. Example 53124 measns that initial ending 5 was placed on 1st position, ending 3 was placed onm 2nd position etc.",
                    "type": "integer"
                }
            }
        },

        "StorageInfo": {
            "title": "storage object",
            "description": "storage information",
            "required": [
                "cugID"
            ],
            "properties": {
                "cugID": {
                    "type": "string"
                },
                "storageroomID": {
                    "type": "array",
                    "description": "array of storagerooms linked to the CUG. Note that array might be empty.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },

        "ReportSettings": {
            "title": "report settings",
            "description": "a set of settings with common parameters for various jobEQ reports",
            "properties": {
                "cugID": {
                    "description": "the ID of CUG to be used for charging and branding, if not provided and report is generated for person, then the first commercial CUG with person registration will be used",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6
                },
                "standardGroupID": {
                    "description": "the ID of standard group used to retrieve relative scores, if not provided standard group will be picked according to person work country",
                    "type": "string"
                },
                "reportLanguage": {
                    "description": "report language",
                    "type": "string",
                    "default": "en"
                }
            }
        },

        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    },

    "securityDefinitions": {
        "jobeqAPIAuth": {
            "type": "oauth2",
            "description": "Valid acceess token should be provided with every API request",
            "authorizationUrl": "http://www.jobeq.net/oauth/dialog",
            "flow": "implicit"
        }
    },
    "security": [
        {
            "jobeqAPIAuth": []
        }
    ]
}